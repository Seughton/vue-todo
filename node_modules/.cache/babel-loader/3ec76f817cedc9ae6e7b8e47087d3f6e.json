{"remainingRequest":"/home/user/Documents/fold/vue-todo/node_modules/babel-loader/lib/index.js!/home/user/Documents/fold/vue-todo/src/store.js","dependencies":[{"path":"/home/user/Documents/fold/vue-todo/src/store.js","mtime":1549367167994},{"path":"/home/user/Documents/fold/vue-todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Documents/fold/vue-todo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    // editedTodo: '',\n    newToDo: \"\",\n    idForToDo: 3,\n    todos: [{\n      id: 1,\n      title: \"Project A\",\n      edit: false,\n      done: false\n    }, {\n      id: 2,\n      title: \"Project b\",\n      edit: false,\n      done: false\n    }]\n  },\n  mutations: {\n    GET_TODO: function GET_TODO(state, todo) {\n      state.newToDo = todo;\n    },\n    ADD_TODO: function ADD_TODO(state) {\n      state.todos.push({\n        title: state.newToDo,\n        edit: false,\n        done: false\n      });\n    },\n    REMOVE_TODO: function REMOVE_TODO(state, index) {\n      var todos = state.todos;\n      todos.splice(index, 1);\n    },\n    CLEAR_TODO: function CLEAR_TODO(state) {\n      state.newToDo = '';\n    }\n  },\n  actions: {\n    getTodo: function getTodo(_ref, todo) {\n      var commit = _ref.commit;\n      commit('GET_TODO', todo);\n    },\n    addTodo: function addTodo(_ref2) {\n      var commit = _ref2.commit;\n      commit('ADD_TODO');\n    },\n    removeToDo: function removeToDo(_ref3, index) {\n      var commit = _ref3.commit;\n      commit('REMOVE_TODO', index);\n    },\n    clearToDo: function clearToDo(_ref4) {\n      var commit = _ref4.commit;\n      commit('CLEAR_TODO');\n    }\n  },\n  getters: {\n    newTodo: function newTodo(state) {\n      return state.newToDo;\n    },\n    todos: function todos(state) {\n      return state.todos.filter(function (todo) {\n        return !todo.completed;\n      });\n    },\n    completedTodos: function completedTodos(state) {\n      return state.todos.filter(function (todo) {\n        return todo.completed;\n      });\n    }\n  }\n});",{"version":3,"sources":["/home/user/Documents/fold/vue-todo/src/store.js"],"names":["Vue","Vuex","use","Store","state","newToDo","idForToDo","todos","id","title","edit","done","mutations","GET_TODO","todo","ADD_TODO","push","REMOVE_TODO","index","splice","CLEAR_TODO","actions","getTodo","commit","addTodo","removeToDo","clearToDo","getters","newTodo","filter","completed","completedTodos"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,SAAS,EAAE,CAHN;AAILC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KADK,EAOL;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KAPK;AAJF,GADqB;AAoB5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QADS,oBACAT,KADA,EACOU,IADP,EACa;AACpBV,MAAAA,KAAK,CAACC,OAAN,GAAgBS,IAAhB;AACD,KAHQ;AAITC,IAAAA,QAJS,oBAIAX,KAJA,EAIO;AACdA,MAAAA,KAAK,CAACG,KAAN,CAAYS,IAAZ,CAAiB;AACfP,QAAAA,KAAK,EAAEL,KAAK,CAACC,OADE;AAEfK,QAAAA,IAAI,EAAE,KAFS;AAGfC,QAAAA,IAAI,EAAE;AAHS,OAAjB;AAMD,KAXQ;AAYTM,IAAAA,WAZS,uBAYGb,KAZH,EAYUc,KAZV,EAYiB;AACxB,UAAIX,KAAK,GAAGH,KAAK,CAACG,KAAlB;AACAA,MAAAA,KAAK,CAACY,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACD,KAfQ;AAgBTE,IAAAA,UAhBS,sBAgBEhB,KAhBF,EAgBS;AAChBA,MAAAA,KAAK,CAACC,OAAN,GAAgB,EAAhB;AACD;AAlBQ,GApBiB;AAwC5BgB,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO,yBACaR,IADb,EACmB;AAAA,UAAhBS,MAAgB,QAAhBA,MAAgB;AACxBA,MAAAA,MAAM,CAAC,UAAD,EAAaT,IAAb,CAAN;AACD,KAHM;AAIPU,IAAAA,OAJO,0BAIa;AAAA,UAAVD,MAAU,SAAVA,MAAU;AAClBA,MAAAA,MAAM,CAAC,UAAD,CAAN;AACD,KANM;AAOPE,IAAAA,UAPO,6BAOgBP,KAPhB,EAOuB;AAAA,UAAjBK,MAAiB,SAAjBA,MAAiB;AAC5BA,MAAAA,MAAM,CAAC,aAAD,EAAgBL,KAAhB,CAAN;AACD,KATM;AAUPQ,IAAAA,SAVO,4BAUe;AAAA,UAAVH,MAAU,SAAVA,MAAU;AACpBA,MAAAA,MAAM,CAAC,YAAD,CAAN;AACD;AAZM,GAxCmB;AAsD5BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,iBAAAxB,KAAK;AAAA,aAAIA,KAAK,CAACC,OAAV;AAAA,KADP;AAEPE,IAAAA,KAAK,EAAE,eAAAH,KAAK;AAAA,aAAIA,KAAK,CAACG,KAAN,CAAYsB,MAAZ,CAAmB,UAACf,IAAD,EAAU;AAAE,eAAO,CAACA,IAAI,CAACgB,SAAb;AAAwB,OAAvD,CAAJ;AAAA,KAFL;AAGPC,IAAAA,cAAc,EAAE,wBAAA3B,KAAK;AAAA,aAAIA,KAAK,CAACG,KAAN,CAAYsB,MAAZ,CAAmB,UAACf,IAAD,EAAU;AAAE,eAAOA,IAAI,CAACgB,SAAZ;AAAuB,OAAtD,CAAJ;AAAA;AAHd;AAtDmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    // editedTodo: '',\n    newToDo: \"\",\n    idForToDo: 3,\n    todos: [\n      {\n        id: 1,\n        title: \"Project A\",\n        edit: false,\n        done: false\n      },\n      {\n        id: 2,\n        title: \"Project b\",\n        edit: false,\n        done: false\n      }\n    ]\n  },\n  mutations: {\n    GET_TODO(state, todo) {\n      state.newToDo = todo\n    },\n    ADD_TODO(state) {\n      state.todos.push({       \n        title: state.newToDo,\n        edit: false,\n        done: false\n      })\n      \n    },  \n    REMOVE_TODO(state, index) {\n      let todos = state.todos\n      todos.splice(index, 1)\n    },  \n    CLEAR_TODO(state) {\n      state.newToDo = ''\n    }\n  },\n  actions: {\n    getTodo({ commit }, todo) {\n      commit('GET_TODO', todo)\n    },\n    addTodo({ commit }) {\n      commit('ADD_TODO')\n    },\n    removeToDo({ commit }, index) {\n      commit('REMOVE_TODO', index)\n    },    \n    clearToDo({ commit }) {\n      commit('CLEAR_TODO')\n    }\n  },\n  getters: {\n    newTodo: state => state.newToDo,\n    todos: state => state.todos.filter((todo) => { return !todo.completed }),\n    completedTodos: state => state.todos.filter((todo) => { return todo.completed })\n  }\n})\n"]}]}